=========
Bootstrap
=========

The sole objective of ``moduli_generator`` is to produce *unique and secure* SSH2 Moduli Files.

The default configuration will produce a complete ``/etc/ssh/moduli`` file, comprised of 20 moduli for each of 5
key-sizes, ``3072``, ``4096``, ``6144``, ``7680``, and ``8192`` in about 90 hours.

.. code-block::


    #/etc/ssh/moduli: moduli_generator: 2024-11-15T15:06:25.629025+00:00
    20241110031151 2 6 100 3071 2 C8053358B1E47DCB826BA2BCB616739EE826ADB273504CF89F8CF6F5A9946B5576F66A07012DCC10557...
    20241110030855 2 6 100 3071 2 C8053358B1E47DCB826BA2BCB616739EE826ADB273504CF89F8CF6F5A9946B5576F66A07012DCC10557...
    20241110030855 2 6 100 3071 2 C8053358B1E47DCB826BA2BCB616739EE826ADB273504CF89F8CF6F5A9946B5576F66A07012DCC10557...
    20241110033748 2 6 100 3071 2 C8053358B1E47DCB826BA2BCB616739EE826ADB273504CF89F8CF6F5A9946B5576F66A07012DCC10557...
    20241110034029 2 6 100 3071 2 C8053358B1E47DCB826BA2BCB616739EE826ADB273504CF89F8CF6F5A9946B5576F66A07012DCC10557...
    ...

Requirements
    MariaDB installed and Operational

    Two MariaDB Profiles (mysql.cnf) Files:
        One for DB Initialization (``privileged-mariadb.cnf``)

        Another for Runtime Operations (``moduli_generator.cnf``)

Prepare TWO MariaDB User Profiles (mysql.cnf)
    - ~/privileged-mariadb.cnf
        Specifies privileged user granted ``ALL PRIVILEGES WITH GRANT`` on the entire installation.
    - ~/moduli_generator.cnf
        username: `moduli_generator`@`%`
        Specifies restricted user granted ``ALL PRIVLEGES ON moduli_db.* WITH GRANT``

During initialization,  ``~/privileged-mariadb.cnf`` will be replaced by  ``~/.moduli_generator`` with the restricted access profile,  ``~/.moduli_generator/moduli_generator.cnf``

ONCE the DB Is Installed:
    Place in *your home directory* the previously prepared mysql.cnf files, privileged-mariadb.cnf, and moduli_generator.cnf.

==================================
Moduli Generator DB Initialization
==================================



1. Prepare Mariadb and Locate Moduli Generator User Configuration Files
    ``~/privilged-mariadb.cnf``, ``~/moduli_generator.cnf``

2. Initialize DB


Production Installation
~~~~~~~~~~~~~~~~~~~~~~~

*Build Wheel*

The first task is to build ``moduli_generator``'s wheel, and then install in a python virtual environment.

The following script will
    - Clone the project
    - create and activate a python virtual environment
    - install dependencies
    - build the python wheel
    - copy the resulting wheel ``moduli_generator-<x.x.x>-py3-none-any.whl`` to your ``${HOME}`` directory.

.. code-block::

    #!/usr/bin/env bash
    mkdir mwork
    cwd=`pwd`
    cd mwork

    git clone https://github.com/beckerwilliams/moduli_generator.git
    cd moduli_generator
    python -m venv .venv
    .venv/bin/activate.sh

    poetry install
    poetry build

    wheel_file=$(ls dist/*.whl | cut -d/ -f2)
    echo "Moduli Generator Wheel located @ ~/${wheel_file}"
    cp dist/*.whl ~/

    cd $cwd
    rm -rf mwork  # Cleanup transients

resp

.. code-block::

    sh -xvvv ./build_wheel.sh
    #!/usr/bin/env bash
    mkdir mwork
    + mkdir mwork
    mkdir: mwork: File exists
    cd mwork
    + cd mwork

    git clone https://github.com/beckerwilliams/moduli_generator.git
    + git clone https://github.com/beckerwilliams/moduli_generator.git
    fatal: destination path 'moduli_generator' already exists and is not an empty directory.
    cd moduli_generator
    + cd moduli_generator
    python -m venv .venv
    + python -m venv .venv
    .venv/bin/activate.sh
    + .venv/bin/activate.sh
    ./build_wheel.sh: line 8: .venv/bin/activate.sh: No such file or directory

    poetry install
    + poetry install
    Installing dependencies from lock file

    No dependencies to install or update

    Installing the current project: moduli_generator (2.1.12)
    poetry build
    + poetry build
    Building moduli_generator (2.1.12)
    Building sdist
      - Building sdist
      - Built moduli_generator-2.1.12.tar.gz
    Building wheel
      - Building wheel
      - Built moduli_generator-2.1.12-py3-none-any.whl

    cp dist/*.whl ~/
    + cp dist/moduli_generator-2.1.12-py3-none-any.whl dist/moduli_generator-2.1.9-py3-none-any.whl /Users/ron/

    cd - # To starting directory
    + cd -
    /Users/ron/mwork
    rm -rf mwork  # Cleanup transients
    + rm -rf mwork





