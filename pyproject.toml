[project]
name = "moduli_generator"
description = "Command Line Utility to build moduli for /usr/local/etc/ssh/moduli_file"
authors = [
	{ name = "Ron Williams", email = "becker.williams@gmail.com" }
]
license = { text = "MIT" }
keywords = ["cryptography", "ssh", "moduli", "security"]
version = "2.1.23"
readme = "README.rst"
classifiers = [
	"Development Status :: 4 - Beta",
	"Intended Audience :: System Administrators",
	"Intended Audience :: Developers",
	"Intended Audience :: Information Technology",
	"Topic :: Security :: Cryptography",
	"Topic :: System :: Systems Administration",
	"Topic :: Security",
	"Programming Language :: Python :: 3",
	"Programming Language :: Python :: 3.12",
	"Programming Language :: Python :: 3.13",
	"Programming Language :: Python :: 3 :: Only",
	"License :: OSI Approved :: MIT License",
	"Operating System :: POSIX :: Linux",
	"Operating System :: Unix",
	"Operating System :: MacOS",
	"Environment :: Console",
	"Natural Language :: English",
	"Typing :: Typed",
]
requires-python = ">=3.12,<4.0"
dependencies = [
	"toml>=0.10.2",
	"mariadb>=1.1.12",
	"configparser>=7.2.0",
]

[project.optional-dependencies]
dev = [
	"poetry>=2.1.3",
	"sphinx>=7.2.6",
	"sphinxcontrib-jquery>=4.1",
	"sphinx-rtd-theme>=3.0.2",
	"pytest>=8.0.0",
	"pytest-cov>=4.0.0",
	"pytest-mock>=3.12.0",
	"pytest-asyncio>=0.23.0",
]

[project.scripts]
moduli_generator = "moduli_generator.cli:main"
moduli_stats = "db.scripts.moduli_stats:main"
changelog = "changelog_generator.scripts.print:main"
install_schema = "db.scripts.install_schema:main"
build_docs = "moduli_generator.scripts.build_docs:main"

[project.urls]
Homepage = "https://github.com/beckerwilliams/moduli_generator"
Documentation = "https://github.com/beckerwilliams/moduli_generator/blob/main/README.rst"
Repository = "https://github.com/beckerwilliams/moduli_generator.git"
Issues = "https://github.com/beckerwilliams/moduli_generator/issues"

# Poetry-specific configuration - minimal required metadata for Poetry compatibility
[tool.poetry]
name = "moduli_generator"
version = "2.1.23"
description = "Command Line Utility to build moduli for /usr/local/etc/ssh/moduli_file"
authors = ["Ron Williams <becker.williams@gmail.com>"]
packages = [
	{ include = "config" },
	{ include = "db" },
	{ include = "installers" },
	{ include = "moduli_generator" }
]
include = [
	"doc/**/*",
	"data/bash_scripts/**/*"
]
exclude = [
	"*.cnf",
	"changelog_generator",
	"stash",
	"_build",
	"_static",
	"_templates",
	".moduli_generator",
	"MG_TEST",
	"htmlcov"
]

# BUILD SYSTEM DEPENDENCIES - Only needed for building the wheel

[tool.poetry.dependencies]
toml = ">=0.10.2"

[tool.poetry.group.dev.dependencies]
sphinx = "^8.2.3"
sphinx-rtd-theme = "^3.0.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
	"--strict-markers",
	"--strict-config",
	"--strict-config",
	"--verbose",
	"--cov=moduli_generator",
	"--cov=db",
	"--cov=config",
	"--cov-report=term-missing",
	"--cov-report=html:htmlcov",
	"--cov-report=xml",
]
markers = [
	"slow: marks tests as slow (deselect with '-m \"not slow\"')",
	"integration: marks tests as integration tests",
	"unit: marks tests as unit tests",
	"security: marks tests as security-focused tests",
]
filterwarnings = [
	"error",
	"ignore::UserWarning",
	"ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["moduli_generator", "db", "config"]
omit = [
	"*/tests/*",
	"*/test_*",
	"*/__pycache__/*",
	"*/scripts/*",
	"*/build/*",
	"*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
	"pragma: no cover",
	"def __repr__",
	"if self.debug:",
	"if settings.DEBUG",
	"raise AssertionError",
	"raise NotImplementedError",
	"if 0:",
	"if __name__ == .__main__.:",
	"class .*\\bProtocol\\):",
	"@(abc\\.)?abstractmethod",
]